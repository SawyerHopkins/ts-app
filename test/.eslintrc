{
  "root": true,
  "extends": [
    "@nuxtjs/eslint-config-typescript"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./src"
  },
  "rules": {
    // https://github.com/Chatie/eslint-config/issues/45
    "no-void": ["error", { "allowAsStatement": true }],
    "no-undef": "off",
    "max-len": ["error", { "code": 120, "ignoreUrls": true }],
    // This rule is cool, but like sql man.
    "camelcase": "off",
    // Typescript breaks this rule sometimes, but has no fix rule :/
    "arrow-parens": "off",
    // ESLint -> Typescript
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": ["error"],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    // Typescript
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/explicit-function-return-type": ["error"],
    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
        "delimiter": "none",
        "requireLast": true
      },
      "singleline": {
          "delimiter": "comma",
          "requireLast": false
      },
      "multilineDetection": "brackets"
    }],
    // Import
    "import/no-cycle": "error",
    "import/order": [
      "error", {
        "alphabetize": {
          "order": "asc"
        },
        "newlines-between": "always",
        "groups": [
          "builtin",
          "external",
          "index",
          "sibling",
          "parent" ,
          "internal"
        ]
      }
    ]
  }
}